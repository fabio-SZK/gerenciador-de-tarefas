/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import control.EquipeCtrl;
import control.GUIController;
import control.ProjetoCtrl;
import control.TarefaCtrl;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.sql.SQLException;

import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Equipe;
import model.Projeto;
import model.Tarefa;
import model.Usuario;

/**
 *
 * @author Fabio
 */
public class ProjetoManagerGUI extends javax.swing.JFrame {
    //Projeto projeto = new Projeto(2, "", "", new Date(1), new Date(1), "");
    GUIController guiController;
    Projeto projeto;
    Integer idProjeto;
    Usuario usuarioSessao;

    public Projeto getProjeto() {
        return projeto;
    }

    public void setProjeto(Projeto projeto) {
        this.projeto = projeto;
    }

    public Integer getIdProjeto() {
        return idProjeto;
    }

    public void setIdProjeto(Integer idProjeto) {
        this.idProjeto = idProjeto;
    }

    public Usuario getUsuarioSessao() {
        return usuarioSessao;
    }

    public void setUsuarioSessao(Usuario usuarioSessao) {
        this.usuarioSessao = usuarioSessao;
    }
    
    
    
    /**
     * Creates new form ProjetoManagerGUI
     */
    public ProjetoManagerGUI(GUIController guiController, Integer idProjeto) {
        this.guiController = guiController;
        
        guiController.setIdTarefa(null);
        guiController.setIdEquipe(null);
        
        initComponents();
        
        this.idProjeto = idProjeto;
        
        // Fetch projects from database
        atualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        rotTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlPrincipal = new javax.swing.JPanel();
        pnlScrlLista1 = new javax.swing.JScrollPane();
        pnlTarefas = new javax.swing.JPanel();
        rotTarefas = new javax.swing.JLabel();
        pnlScrlLista = new javax.swing.JScrollPane();
        pnlUsuarios = new javax.swing.JPanel();
        rotEquipes = new javax.swing.JLabel();
        pnlScrlLista2 = new javax.swing.JScrollPane();
        pnlEquipes = new javax.swing.JPanel();
        rotUsuarios = new javax.swing.JLabel();
        rotNome = new javax.swing.JLabel();
        rotDescricao = new javax.swing.JLabel();
        rotDataCriacao = new javax.swing.JLabel();
        rotPrazo = new javax.swing.JLabel();
        rotObjetivo = new javax.swing.JLabel();
        btAtribuirTarefa = new javax.swing.JButton();
        btRemoverTarefa = new javax.swing.JButton();
        btAdicionarMembro = new javax.swing.JButton();
        btRemoverMembro = new javax.swing.JButton();
        btEditarProjeto = new javax.swing.JButton();
        btAdicionarEquipe = new javax.swing.JButton();
        btRemoverEquipe = new javax.swing.JButton();
        btAdicionarLider = new javax.swing.JButton();
        btRemoverLider = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        rotTarefaNota = new javax.swing.JLabel();
        rotTarefaNota1 = new javax.swing.JLabel();
        btSelecionarEquipe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        rotTitulo.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        rotTitulo.setText("Tasky");

        pnlScrlLista1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        pnlScrlLista1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlTarefas.setLayout(new javax.swing.BoxLayout(pnlTarefas, javax.swing.BoxLayout.Y_AXIS));
        pnlScrlLista1.setViewportView(pnlTarefas);

        rotTarefas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rotTarefas.setText("Tarefas:");

        pnlScrlLista.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        pnlScrlLista.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlUsuarios.setLayout(new javax.swing.BoxLayout(pnlUsuarios, javax.swing.BoxLayout.Y_AXIS));
        pnlScrlLista.setViewportView(pnlUsuarios);

        rotEquipes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rotEquipes.setText("Equipes:");

        pnlScrlLista2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        pnlScrlLista2.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlEquipes.setLayout(new javax.swing.BoxLayout(pnlEquipes, javax.swing.BoxLayout.Y_AXIS));
        pnlScrlLista2.setViewportView(pnlEquipes);

        rotUsuarios.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rotUsuarios.setText("Usuarios:");

        rotNome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rotNome.setText("Projeto:");

        rotDescricao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rotDescricao.setText("jLabel1");

        rotDataCriacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rotDataCriacao.setText("Data de criação:");

        rotPrazo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rotPrazo.setText("Prazo:");

        rotObjetivo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rotObjetivo.setText("Objetivo:");

        btAtribuirTarefa.setText("Atribuir Tarefa...");
        btAtribuirTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtribuirTarefaActionPerformed(evt);
            }
        });

        btRemoverTarefa.setText("Remover Tarefa");
        btRemoverTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverTarefaActionPerformed(evt);
            }
        });

        btAdicionarMembro.setText("Adicionar Membro...");
        btAdicionarMembro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarMembroActionPerformed(evt);
            }
        });

        btRemoverMembro.setText("Remover Membro...");
        btRemoverMembro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverMembroActionPerformed(evt);
            }
        });

        btEditarProjeto.setText("Editar projeto...");

        btAdicionarEquipe.setText("Adicionar Equipe...");
        btAdicionarEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarEquipeActionPerformed(evt);
            }
        });

        btRemoverEquipe.setText("Remover Equipe");
        btRemoverEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverEquipeActionPerformed(evt);
            }
        });

        btAdicionarLider.setText("Adicionar Lider...");
        btAdicionarLider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarLiderActionPerformed(evt);
            }
        });

        btRemoverLider.setText("Remover Lider...");
        btRemoverLider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverLiderActionPerformed(evt);
            }
        });

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        jButton1.setText("Selecionar Tarefa...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        rotTarefaNota.setText("<html><i>Nota: Seleciona uma tarefa antes de remover ou editar</i></html>");

        rotTarefaNota1.setText("<html><i>Nota: Seleciona uma equipe antes de removê-la</i></html>");

        btSelecionarEquipe.setText("Selecionar Equipe...");
        btSelecionarEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarEquipeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAtualizar)
                .addGap(18, 18, 18)
                .addComponent(btEditarProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rotDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rotDataCriacao)
                    .addComponent(rotPrazo)
                    .addComponent(rotObjetivo)
                    .addComponent(rotNome, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rotTarefaNota1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(btAdicionarEquipe)
                        .addGap(33, 33, 33)
                        .addComponent(btRemoverEquipe)
                        .addGap(33, 33, 33)
                        .addComponent(btSelecionarEquipe))
                    .addComponent(rotEquipes)
                    .addComponent(pnlScrlLista2, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlScrlLista1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotTarefas)
                            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addComponent(btAtribuirTarefa)
                                .addGap(18, 18, 18)
                                .addComponent(btRemoverTarefa))
                            .addComponent(jButton1))
                        .addGap(57, 57, 57)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlScrlLista, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotUsuarios)
                            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btAdicionarLider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btAdicionarMembro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btRemoverMembro)
                                    .addComponent(btRemoverLider)))))
                    .addComponent(rotTarefaNota, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEditarProjeto)
                    .addComponent(btAtualizar))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addComponent(rotUsuarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlScrlLista, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rotTarefas)
                            .addComponent(rotNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addComponent(rotDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rotDataCriacao)
                                .addGap(18, 18, 18)
                                .addComponent(rotPrazo)
                                .addGap(18, 18, 18)
                                .addComponent(rotObjetivo))
                            .addComponent(pnlScrlLista1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAtribuirTarefa)
                    .addComponent(btRemoverTarefa)
                    .addComponent(btAdicionarMembro)
                    .addComponent(btRemoverMembro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionarLider)
                    .addComponent(btRemoverLider)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(rotTarefaNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(rotEquipes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlScrlLista2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionarEquipe)
                    .addComponent(btRemoverEquipe)
                    .addComponent(btSelecionarEquipe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rotTarefaNota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        jScrollPane1.setViewportView(pnlPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(rotTitulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rotTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarMembroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarMembroActionPerformed
        String nomeUsuario = JOptionPane.showInputDialog(this,
            "Informe o nome de usuário",
            "Adicionar membro",
            JOptionPane.QUESTION_MESSAGE);
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();
        
        projetoDAO.adicionarMembro(nomeUsuario, projeto);
        
        try{
            projetoDAO.getConexao().getConn().close();
        }
        catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
            sqle.getMessage(),
            "Erro",
            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAdicionarMembroActionPerformed

    private void btAdicionarLiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarLiderActionPerformed
        String nomeUsuario = JOptionPane.showInputDialog(this,
            "Informe o nome de usuário",
            "Adicionar Lider",
            JOptionPane.QUESTION_MESSAGE);
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();
        
        projetoDAO.adicionarLider(nomeUsuario, projeto);
        
        try{
            projetoDAO.getConexao().getConn().close();
        }
        catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
            sqle.getMessage(),
            "Erro",
            JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btAdicionarLiderActionPerformed

    private void btRemoverMembroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverMembroActionPerformed
        String nomeUsuario = JOptionPane.showInputDialog(this,
            "Informe o nome de usuário",
            "Remover membro",
            JOptionPane.QUESTION_MESSAGE);
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();
        
        projetoDAO.removerMembro(nomeUsuario, projeto);
        
        try{
            projetoDAO.getConexao().getConn().close();
        }
        catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
            sqle.getMessage(),
            "Erro",
            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btRemoverMembroActionPerformed

    private void btRemoverLiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverLiderActionPerformed
        String nomeUsuario = JOptionPane.showInputDialog(this,
            "Informe o nome de usuário",
            "Remover membro",
            JOptionPane.QUESTION_MESSAGE);
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();
        
        projetoDAO.removerLider(nomeUsuario, projeto);
        
        try{
            projetoDAO.getConexao().getConn().close();
        }
        catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
            sqle.getMessage(),
            "Erro",
            JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btRemoverLiderActionPerformed

    private void btAtribuirTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtribuirTarefaActionPerformed
        guiController.mostrarProjetoAtribuirTarefaView(idProjeto);
    }//GEN-LAST:event_btAtribuirTarefaActionPerformed

    private void btRemoverTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverTarefaActionPerformed
        if(guiController.getIdTarefa() != null){
            TarefaCtrl tarefaDAO = new TarefaCtrl();
        
            tarefaDAO.remover(guiController.getIdTarefa());
            try{
                tarefaDAO.getConexao().getConn().close();
            }
            catch(SQLException sqle){
                JOptionPane.showMessageDialog(null,
                sqle.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            }
        }
        guiController.setIdTarefa(null);
    }//GEN-LAST:event_btRemoverTarefaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        guiController.mostrarProjetoSelecionarTarefaGUI(idProjeto);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        atualizar();
        guiController.setIdTarefa(null);
        guiController.setIdEquipe(null);
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btRemoverEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverEquipeActionPerformed
        if(guiController.getIdEquipe() != null){
            EquipeCtrl equipeDAO = new EquipeCtrl();
        
            equipeDAO.remover(guiController.getIdEquipe());
            
            try{
                equipeDAO.getConexao().getConn().close();
            }
            catch(SQLException sqle){
                JOptionPane.showMessageDialog(null,
                sqle.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
            }
        }
        guiController.setIdEquipe(null);
    }//GEN-LAST:event_btRemoverEquipeActionPerformed

    private void btSelecionarEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarEquipeActionPerformed
        guiController.mostrarProjetoSelecionarEquipeGUI(idProjeto);
    }//GEN-LAST:event_btSelecionarEquipeActionPerformed

    private void btAdicionarEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarEquipeActionPerformed
        guiController.mostrarEquipeView(idProjeto);
    }//GEN-LAST:event_btAdicionarEquipeActionPerformed

 
    private JPanel createUserBlock(Usuario usuario) {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        panel.setBackground(Color.WHITE);
        panel.setPreferredSize(new Dimension(350, 100));
        panel.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();

        JLabel rotNome = new JLabel("<html><i>" + usuario.getNome() + "</i></html>");
        rotNome.setFont(new Font("Arial", Font.BOLD, 16));

        JLabel rotPerfilNome = new JLabel("<html><i>" + usuario.getPerfilUsuario().getNome() + "</i></html>");
        rotPerfilNome.setFont(new Font("Arial", Font.PLAIN, 12));
        
        JLabel rotIdUsuario = new JLabel("<html><i>ID: " + usuario.getIdUsuario() + "</i></html>");
        rotIdUsuario.setFont(new Font("Arial", Font.BOLD, 16));
        
        JLabel rotLider;
        
        if(projetoDAO.verificarLider(usuario.getIdUsuario(), projeto.getIdProjeto())){
            rotLider = new JLabel("<html><i>Líder</i></html>");
        }
        else{
            rotLider = new JLabel("");
        }
        
        try{
            projetoDAO.getConexao().getConn().close();
        }
        catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
            sqle.getMessage(),
            "Erro",
            JOptionPane.ERROR_MESSAGE);
        }
        
        JButton btDetalhes = new JButton("Detalhes");
        btDetalhes.addActionListener(e -> JOptionPane.showMessageDialog(null, "Usuario: " + usuario.getNome()));

        JPanel pnlTexto = new JPanel(new GridLayout(2, 2));
        pnlTexto.setBackground(Color.WHITE);
        pnlTexto.add(rotNome);
        pnlTexto.add(rotPerfilNome);
        pnlTexto.add(rotIdUsuario);
        pnlTexto.add(rotLider);

        panel.add(pnlTexto, BorderLayout.CENTER);
        panel.add(btDetalhes, BorderLayout.EAST);

        return panel;
    }
    
    private JPanel createTaskBlock(Tarefa tarefa) {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        panel.setBackground(Color.WHITE);
        panel.setPreferredSize(new Dimension(350, 100));
        panel.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));

        JLabel rotDescricao = new JLabel("<html><i>" + tarefa.getDescricao() + "</i></html>");
        rotDescricao.setFont(new Font("Arial", Font.BOLD, 16));

        JLabel rotPrioridade = new JLabel("<html><i> Prioridade: " + tarefa.getPrioridade() + "</i></html>");
        rotPrioridade.setFont(new Font("Arial", Font.PLAIN, 12));
        
        JLabel rotPrazo = new JLabel("<html><i> Prazo: " + tarefa.getPrazoEntrega().toString() + "</i></html>");
        rotPrioridade.setFont(new Font("Arial", Font.PLAIN, 12));

        JButton btDetalhes = new JButton("Detalhes");
        btDetalhes.addActionListener(e -> JOptionPane.showMessageDialog(null, "Tarefa: " + tarefa.getDescricao()));

        JPanel pnlTexto = new JPanel(new GridLayout(2, 2));
        pnlTexto.setBackground(Color.WHITE);
        pnlTexto.add(rotDescricao);
        pnlTexto.add(rotPrioridade);
        pnlTexto.add(rotPrazo);

        panel.add(pnlTexto, BorderLayout.CENTER);
        panel.add(btDetalhes, BorderLayout.EAST);

        return panel;
    }
    
    private JPanel createTeamBlock(Equipe equipe) {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        panel.setBackground(Color.WHITE);
        panel.setPreferredSize(new Dimension(350, 100));
        panel.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));

        JLabel rotDescricao = new JLabel("<html><i>" + equipe.getDescricao() + "</i></html>");
        rotDescricao.setFont(new Font("Arial", Font.BOLD, 16));
        
        JLabel rotFuncao = new JLabel("<html><i> Função: " + equipe.getFuncao() + "</i></html>");
        rotFuncao.setFont(new Font("Arial", Font.PLAIN, 12));

        JButton btDetalhes = new JButton("Detalhes");
        btDetalhes.addActionListener(e -> JOptionPane.showMessageDialog(null, "Equipe: " + equipe.getDescricao()));

        JPanel pnlTexto = new JPanel(new GridLayout(2, 2));
        pnlTexto.setBackground(Color.WHITE);
        pnlTexto.add(rotDescricao);
        pnlTexto.add(rotFuncao);

        panel.add(pnlTexto, BorderLayout.CENTER);
        panel.add(btDetalhes, BorderLayout.EAST);

        return panel;
    }
    
    public void preencherDados(){
        rotNome.setText("<html><i>Projeto: " + projeto.getNome() + "</i></html>");
        rotDescricao.setText("<html><i>" + projeto.getDescricao() + "</i></html>");
        rotDataCriacao.setText("Data de criação: " + projeto.getDataCriacao().toString());
        rotPrazo.setText("Prazo: " + projeto.getDataUltima().toString());
        rotObjetivo.setText("Objetivo: " + projeto.getObjetivo());
    }
    
    public void atualizar(){
        pnlUsuarios.removeAll();
        pnlTarefas.removeAll();
        pnlEquipes.removeAll();
        
        pnlUsuarios.revalidate();
        pnlUsuarios.repaint();
        pnlTarefas.revalidate();
        pnlTarefas.repaint();
        pnlEquipes.revalidate();
        pnlEquipes.repaint();
        
        ProjetoCtrl projetoDAO = new ProjetoCtrl();
        projeto = projetoDAO.consultarProjeto(idProjeto);
        List<Usuario> usuarios = projetoDAO.consultarMembros(idProjeto);

        // Add each project to the content panel
        for (Usuario usuario : usuarios) {
            pnlUsuarios.add(createUserBlock(usuario));
        }
        
        pnlUsuarios.revalidate();
        pnlUsuarios.repaint();
        
        List<Tarefa> tarefas = projetoDAO.consultarTarefas(idProjeto);

        // Add each project to the content panel
        for (Tarefa tarefa : tarefas) {
            pnlTarefas.add(createTaskBlock(tarefa));
        }
        
        pnlTarefas.revalidate();
        pnlTarefas.repaint();
        
        List<Equipe> equipes = projetoDAO.consultarEquipes(idProjeto);

        // Add each project to the content panel
        for (Equipe equipe : equipes) {
            pnlEquipes.add(createTeamBlock(equipe));
        }
        
        pnlEquipes.revalidate();
        pnlEquipes.repaint();
        
        preencherDados();
        try{
            projetoDAO.getConexao().getConn().close();
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,
                sqle.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionarEquipe;
    private javax.swing.JButton btAdicionarLider;
    private javax.swing.JButton btAdicionarMembro;
    private javax.swing.JButton btAtribuirTarefa;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btEditarProjeto;
    private javax.swing.JButton btRemoverEquipe;
    private javax.swing.JButton btRemoverLider;
    private javax.swing.JButton btRemoverMembro;
    private javax.swing.JButton btRemoverTarefa;
    private javax.swing.JButton btSelecionarEquipe;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnlEquipes;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JScrollPane pnlScrlLista;
    private javax.swing.JScrollPane pnlScrlLista1;
    private javax.swing.JScrollPane pnlScrlLista2;
    private javax.swing.JPanel pnlTarefas;
    private javax.swing.JPanel pnlUsuarios;
    private javax.swing.JLabel rotDataCriacao;
    private javax.swing.JLabel rotDescricao;
    private javax.swing.JLabel rotEquipes;
    private javax.swing.JLabel rotNome;
    private javax.swing.JLabel rotObjetivo;
    private javax.swing.JLabel rotPrazo;
    private javax.swing.JLabel rotTarefaNota;
    private javax.swing.JLabel rotTarefaNota1;
    private javax.swing.JLabel rotTarefas;
    private javax.swing.JLabel rotTitulo;
    private javax.swing.JLabel rotUsuarios;
    // End of variables declaration//GEN-END:variables
}
